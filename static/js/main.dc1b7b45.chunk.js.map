{"version":3,"sources":["Components/Stats.js","Components/Stopwatch.js","Components/Header.js","Components/Counter.js","Components/Icon.js","Components/Player.js","Components/AddPlayerForm.js","Components/App.js","index.js"],"names":["Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","handleStopwatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","defaultProps","Counter","index","changeScore","Icon","props","viewBox","isHighScore","d","transform","width","height","Player","name","id","removePlayer","PureComponent","AddPlayerForm","playerInput","React","createRef","handleSubmit","e","preventDefault","addPlayer","current","value","currentTarget","reset","onSubmit","type","ref","placeholder","App","prevPlayerId","handleScoreChange","delta","prevState","handleAddPlayer","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc1b7b45.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Stats = ({ players }) => {\n\n    const totalPlayers = players.length\n    const totalPoints = players.reduce((total, player) => {\n        return total + player.score\n    }, 0)\n\n    return (\n        <table className=\"stats\">\n            <tbody>\n                <tr>\n                    <td>Players:</td>\n                    <td>{ totalPlayers }</td>\n                </tr>\n                <tr>\n                    <td>Total Points:</td>\n                    <td>{ totalPoints }</td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nStats.propTypes = {\n    players: PropTypes.arrayOf(PropTypes.shape({\n        score: PropTypes.number\n    })).isRequired\n}\n\nexport default Stats","import React, { Component } from 'react'\n\nclass Stopwatch extends Component {\n\n    state = {\n        isRunning: false,\n        elapsedTime: 0,\n        previousTime: 0\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 100)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID)\n    }\n\n    tick = () => {\n        if (this.state.isRunning) {\n            const now = Date.now()\n            this.setState({\n                previousTime: now,\n                elapsedTime: this.state.elapsedTime + (now - this.state.previousTime)\n            })\n        }\n    }\n\n    handleStopwatch = () => {\n        this.setState({\n            isRunning: !this.state.isRunning\n        })\n        if (!this.state.isRunning) {\n            this.setState({ previousTime: Date.now() })\n        }\n    }\n\n    handleReset = () => {\n        this.setState({ \n            elapsedTime: 0,\n            isRunning: false\n        })\n    }\n\n    render() {\n        const seconds = Math.floor(this.state.elapsedTime / 1000)\n\n        return (\n            <div className=\"stopwatch\">\n                <h2>Stopwatch</h2>\n                <span className=\"stopwatch-time\">\n                    { seconds }\n                </span>\n                <button onClick={this.handleStopwatch}>\n                    { this.state.isRunning ? 'Stop' : 'Start' }\n                </button>\n                <button onClick={this.handleReset}>Reset</button>\n            </div>\n        )\n    }\n}\n\nexport default Stopwatch","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Stats from './Stats'\nimport Stopwatch from './Stopwatch'\n\nconst Header = ({ players, title }) => {\n    return (\n      <header>\n        <Stats players={ players } />\n        <h1>{ title }</h1>\n        <Stopwatch />\n      </header>\n    );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  players: PropTypes.arrayOf(PropTypes.object)\n}\n\nHeader.defaultProps = {\n  title: 'Scoreboard'\n}\n\nexport default Header","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({ index, score, changeScore }) => {\n    return (\n    <div className=\"counter\">\n        <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\n        <span className=\"counter-score\">{ score }</span>\n        <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\n    </div>\n    );\n}\n\nCounter.propTypes = {\n    index: PropTypes.number,\n    score: PropTypes.number,\n    changeScore: PropTypes.func\n}\n\n  export default Counter","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Icon = (props) => {\n    return (\n        <svg viewBox=\"0 0 44 35\" className={props.isHighScore ? 'is-high-score' : null}>\n            <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n            <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n        </svg>\n    )\n}\n\nIcon.propTypes = {\n    isHighScore: PropTypes.bool\n}\n\nexport default Icon","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types'\n\nimport Counter from './Counter';\nimport Icon from './Icon'\n\nclass Player extends PureComponent {\n\n  static propTypes = {\n    changeScore: PropTypes.func.isRequired,\n    removePlayer: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    isHighScore: PropTypes.bool\n  }\n\n    render() {\n\n      const { name, id, score, index, removePlayer, changeScore } = this.props\n\n      return (\n        <div className=\"player\">\n          <span className=\"player-name\">\n            <button className=\"remove-player\" onClick={() => removePlayer(id)}>âœ–</button>\n\n            <Icon isHighScore={this.props.isHighScore} />\n            { name }\n          </span>\n  \n        <Counter \n            score={score}\n            index={index}\n            changeScore={changeScore}\n        />\n      </div>\n      )\n    }\n  }\n\n  export default Player","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass AddPlayerForm extends Component {\n\n    static propTypes = {\n        addPlayer: PropTypes.func\n    }\n\n    playerInput = React.createRef()\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addPlayer(this.playerInput.current.value)\n        e.currentTarget.reset()\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input \n                    type=\"text\"\n                    ref={this.playerInput}\n                    placeholder=\"Enter a player's name\"\n                />\n\n                <input \n                    type=\"Submit\"\n                    value=\"Add Player\"\n                />\n            </form>\n        )\n    }\n}\n\nexport default AddPlayerForm","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm'\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"James\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Megan\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Lauren\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"Logan\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n\n  //player id counter\n  prevPlayerId = 4\n\n  handleScoreChange = (index, delta) => {\n    this.setState( prevState => ({\n      score: prevState.players[index].score += delta\n    }));\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState( prevState => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name: name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }\n        ]\n      }\n    })\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  getHighScore = () => {\n    const scores = this.state.players.map( p => p.score )\n    const highScore = Math.max(...scores)\n    if (highScore) {\n      return highScore\n    }\n    return null\n  }\n\n  render() {\n\n    const highScore = this.getHighScore()\n\n    return (\n      <div className=\"scoreboard\">\n        <Header \n          players={this.state.players}\n        />\n  \n        {/* Players list */}\n        {this.state.players.map( (player, index) =>\n          <Player \n            name={player.name}\n            score={player.score}\n            id={player.id}\n            key={player.id.toString()} \n            index={index}\n            changeScore={this.handleScoreChange}\n            removePlayer={this.handleRemovePlayer} \n            isHighScore={highScore === player.score}          \n          />\n        )}\n\n        <AddPlayerForm addPlayer={this.handleAddPlayer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}